<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="username" value="ADMIN"></property>
		<property name="password" value="Qweasdzxc123"></property>
		<property name="url" value="jdbc:oracle:thin:@pclassmdb_high?TNS_ADMIN=C:/SEMI/Wallet_PCLASSMDB"></property>
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">	<!-- 여기에 config에 등록된 설정파일의 위치를 등록해줌 -->
	  <property name="dataSource" ref="dataSource" />
	  <property name="configLocation" value="classpath:mybatis/config.xml"></property>
	</bean>
	
	

	<!-- 인터페이스가 아닌 mapper로 사용해보기 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 메일 발송 : JavaMailSenderImpl -->
	<bean class="org.springframework.mail.javamail.JavaMailSenderImpl" id="javaMailSenderImpl">
		<property name="username" value="qleen513@gmail.com"/>
		<property name="password" value="Bmw135798@"/>
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- RestTemplate생성자의 매개변수로 넘겨줄 객체 bean 등록 : SimpleClientHttpRequestFactory -->
	<bean id="simpleClientHttpRequestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory" >
		<property name="connectTimeout" value="5000"/>
		<property name="readTimeout" value="5000"/>
	</bean>
	
	<!-- http통신을 위한 클래스 :  RestTemplate에 SimpleClientHttpRequestFactory등록하기 -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg name="requestFactory" ref="simpleClientHttpRequestFactory"/>
	</bean>
	
	<!-- 비밀번호 암호화 : DelegatingPasswordEncoder, PasswordEncoderFactory -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.factory.PasswordEncoderFactories" factory-method="createDelegatingPasswordEncoder"/>

	<!-- 파일업로드 : CommonsMultipartResolver -> id는 multipartResolver로 지정하도록 문서에서 강제하고 있다. -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxInMemorySize" value="5242880"/>
	</bean>



	<mybatis-spring:scan base-package="com.kh.spring" annotation="org.apache.ibatis.annotations.Mapper"/>	<!-- base-package내에서 Mapper 어노테이션이 붙어있는 repository만 호출 -->
</beans>
